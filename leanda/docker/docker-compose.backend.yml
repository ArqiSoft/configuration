version: '3'

services:
    eventstore:
        image: eventstore/eventstore:release-4.0.2
        container_name: eventstore
        ports:
        - "2113:2113"
        - "1113:1113"
        environment:
        - RUN_PROJECTIONS=All
        volumes:
        - data-eventstore:/var/lib/eventstore
        networks:
        - leanda-ext

    redis:
        image: redis:4-alpine
        container_name: redis
        command: redis-server --appendonly yes
        ports:
        - "6379:6379"
        volumes:
        - data-redis:/data
        networks:
        - leanda-ext

    rabbitmq:
        image: leanda/rabbitmq
        container_name: rabbitmq
        hostname: "rabbitmq-dev"
        environment:
        - RABBITMQ_DEFAULT_VHOST=osdr_dev
        ports:
        - "8282:15672"
        - "5671:5671"
        - "5672:5672"
        volumes:
        - data-rabbitmq:/var/lib/rabbitmq
        networks:
        - leanda-ext

    mongo:
        image: mongo:3.6
        container_name: mongo
        ports:
        - "27017:27017"
        volumes:
        - data-mongo-config:/data/configdb
        - data-mongo-data:/data/db
        networks:
        - leanda-ext

    # filebeat:
    #     image: docker.scidatasoft.com/filebeat
    #     container_name: filebeat
    #     volumes:
    #     - /home/logs:/logs/
    #     networks:
    #     - leanda-ext
    #     depends_on:
    #     - logstash

    # logstash:
    #     image: docker.scidatasoft.com/logstash
    #     container_name: logstash
    #     command: -f /config-dir/logstash.conf
    #     ports:
    #     - "5044:5044"
    #     - "12201:12201"
    #     - "12201:12201/udp"
    #     - "12202:12202"
    #     - "12202:12202/udp"
    #     networks:
    #     - leanda-ext
    #     depends_on:
    #     - elasticsearch

    # kibana:
    #     image: docker.elastic.co/kibana/kibana-oss:6.1.1
    #     container_name: kibana
    #     environment:
    #     - ELASTICSEARCH_URL:"elasticsearch:9201"
    #     ports:
    #     - "5661:5601"
    #     networks:
    #     - leanda-ext

    elasticsearch:
        image: leanda/elasticsearch
        container_name: elasticsearch
        environment:
        - discovery.type=single-node
        #- "ES_JAVA_OPTS=-Xms8g -Xmx8g"
        volumes:
        - data-elasticsearch:/usr/share/elasticsearch/data
        ports:
        - "9201:9201"
        - "9200:9200"
        - "9301:9300"
        networks:
        - leanda-ext

    # heartbeat:
    #     image: docker.scidatasoft.com/heartbeat:latest
    #     container_name: heartbeat
    #     environment:
    #     - API_URL=http://nginx
    #     - UI_URL=http://leanda-ui
    #     - BACKEND_HOST=mulanback.rsc-us.org
    #     networks:
    #     - leanda-ext

    nginx:
        image: leanda/nginx
        container_name: nginx
        ports:
        - "80:80"
        networks:
        - leanda-ext
        depends_on:
        - blob-storage-api
        - core-web-api

    # elasticsearch-curator:
    #     container_name: elasticsearch-curator
    #     image: docker.scidatasoft.com/elasticsearch-curator:latest
    #     environment:
    #     - LOG_LEVEL = INFO
    #     - LOG_FORMAT = default
    #     - BLACK_LIST = ['elasticsearch', 'urllib3']
    #     command: --config config.yml action.yml
    #     networks:
    #     - leanda-ext

    blob-storage-api:
        container_name: blob-storage-api
        entrypoint: /bin/bash
        image: leanda/blob-storage-webapi:${TAG_VERSION-latest}
        environment:
        - IDENTITY_SERVER_URL=${IDENTITY_SERVER_URL}
        - OSDR_LOG_FOLDER=/logs
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - MAX_BLOB_SIZE=419430400
        # - SWAGGER_BASEPATH=/blob/v1
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./Sds.Storage.Blob.WebApi
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        networks:
        - leanda-ext
        ports:
        - "18006:18006"
        depends_on:
        - rabbitmq
        - mongo

    metadata-processing:
        container_name: metadata-processing
        image: leanda/metadata-processing:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - OSDR_LOG_FOLDER=/logs
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./Sds.MetadataStorage.Processing
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        networks:
        - leanda-ext
        ports:
        - "11050:11050"
        depends_on:
        - rabbitmq
        - mongo

    indexing:
        container_name: indexing
        image: leanda/indexing:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - OSDR_LOG_FOLDER=/logs
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_ES=http://elasticsearch:9200
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh mongo:27017 -t 60 -- ./wait-for-it.sh elasticsearch:9200 -t 60 -- ./Sds.Indexing
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        networks:
        - leanda-ext
        ports:
        - "11090:11090"
        depends_on:
        - elasticsearch
        - rabbitmq
        - mongo

    core-web-api:
        container_name: core-web-api
        image: leanda/core-web-api:local
        entrypoint: /bin/bash
        environment:
        - IDENTITY_SERVER_URL=${IDENTITY_SERVER_URL}
        - OSDR_REDIS=redis
        - OSDR_LOG_FOLDER=/logs
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_EVENT_STORE=ConnectTo=tcp://admin:changeit@eventstore:1113
        - OSDR_ES=http://elasticsearch:9200
        # - SWAGGER_BASEPATH=/osdr/v1
        - OSDR_LOG_LEVEL=${OSDR_LOG_LEVEL}
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh elasticsearch:9200 -t 60 -- ./Sds.Osdr.WebApi
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        networks:
        - leanda-ext
        ports:
        - "28611:18006"
        depends_on:
        - elasticsearch
        - rabbitmq
        - eventstore
        - redis
        - mongo

    core-backend:
        container_name: core-backend
        image: leanda/core-backend:local
        entrypoint: /bin/bash
        environment:
        - OSDR_LOG_FOLDER=/logs
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_EVENT_STORE=ConnectTo=tcp://admin:changeit@eventstore:1113
        - OSDR_REDIS=redis
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./Sds.Osdr.Domain.BackEnd
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        networks:
        - leanda-ext
        ports:
        - "11030:11030"
        depends_on:
        - rabbitmq
        - eventstore
        - redis
        - mongo

    core-frontend:
        container_name: core-frontend
        image: leanda/core-frontend:local
        entrypoint: /bin/bash
        environment:
        - OSDR_LOG_FOLDER=/logs
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_EVENT_STORE=ConnectTo=tcp://admin:changeit@eventstore:1113
        - OSDR_REDIS=redis
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./Sds.Osdr.Domain.FrontEnd
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        networks:
        - leanda-ext
        ports:
        - "11020:11020"
        depends_on:
        - rabbitmq
        - eventstore
        

    core-sagahost:
        container_name: core-sagahost
        image: leanda/core-sagahost:local
        entrypoint: /bin/bash
        environment:
        - OSDR_LOG_FOLDER=/logs
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./Sds.Osdr.Domain.SagaHost
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        networks:
        - leanda-ext
        ports:
        - "11010:11010"
        depends_on:
        - rabbitmq
        - mongo

    core-persistence:
        container_name: core-persistence
        image: leanda/core-persistence:local
        entrypoint: /bin/bash
        environment:
        - OSDR_LOG_FOLDER=/logs
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./Sds.Osdr.Persistence
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        networks:
        - leanda-ext
        ports:
        - "11000:11000"
        depends_on:
        - rabbitmq
        - mongo

    imaging:
        container_name: imaging
        image: leanda/imaging:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - OSDR_LOG_FOLDER=/logs
        - OSDR_TEMP_FILES_FOLDER=/temp
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - QUEUE_PREFETCH_SIZE=9
        - EXECUTOR_THREAD_COUNT=3
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- java -Djava.awt.headless=true -Xmx256m -XX:NativeMemoryTracking=summary -jar sds-imaging-service.jar
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        - ${OSDR_TEMP_FILES_FOLDER}:/temp
        networks:
        - leanda-ext
        depends_on:
        - rabbitmq
        - mongo

    chemical-file-parser:
        container_name: chemical-file-parser
        image: leanda/chemical-file-parser:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - TZ=EST
        - OSDR_LOG_FOLDER=/logs
        - OSDR_TEMP_FILES_FOLDER=/temp
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - QUEUE_PREFETCH_SIZE=9
        - EXECUTOR_THREAD_COUNT=3
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh mongo:27017 -t 60 -- java -jar chemical-parser.jar
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        - ${OSDR_TEMP_FILES_FOLDER}:/temp
        networks:
        - leanda-ext
        depends_on:
        - rabbitmq
        - mongo

    reaction-parser:
        container_name: reaction-file-parser
        image: leanda/reaction-file-parser:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - TZ=EST
        - OSDR_LOG_FOLDER=/logs
        - OSDR_TEMP_FILES_FOLDER=/temp
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - QUEUE_PREFETCH_SIZE=9
        - EXECUTOR_THREAD_COUNT=3
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh mongo:27017 -t 60 -- java -XX:NativeMemoryTracking=summary -jar reaction-parser.jar
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        - ${OSDR_TEMP_FILES_FOLDER}:/temp
        networks:
        - leanda-ext
        depends_on:
        - rabbitmq
        - mongo

    crystal-parser:
        container_name: crystal-file-parser
        image: leanda/crystal-file-parser:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - TZ=EST
        - OSDR_LOG_FOLDER=/logs
        - OSDR_TEMP_FILES_FOLDER=/temp
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - QUEUE_PREFETCH_SIZE=9
        - EXECUTOR_THREAD_COUNT=3
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh mongo:27017 -t 60 -- java -XX:NativeMemoryTracking=summary -jar crystal-parser.jar
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        - ${OSDR_TEMP_FILES_FOLDER}:/temp
        networks:
        - leanda-ext
        depends_on:
        - rabbitmq
        - mongo

    spectra-parser:
        container_name: spectra-file-parser
        image: leanda/spectra-file-parser:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - TZ=EST
        - OSDR_LOG_FOLDER=/logs
        - OSDR_TEMP_FILES_FOLDER=/temp
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - QUEUE_PREFETCH_SIZE=9
        - EXECUTOR_THREAD_COUNT=3
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh mongo:27017 -t 60 -- java -XX:NativeMemoryTracking=summary -jar spectra-parser.jar
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        - ${OSDR_TEMP_FILES_FOLDER}:/temp
        networks:
        - leanda-ext
        depends_on:
        - rabbitmq
        - mongo

    office-processor:
        container_name: office-processor
        image: leanda/office-file-processor:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - TZ=EST
        - OSDR_LOG_FOLDER=/logs
        - OSDR_TEMP_FILES_FOLDER=/temp
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - QUEUE_PREFETCH_SIZE=9
        - EXECUTOR_THREAD_COUNT=2
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh mongo:27017 -t 60 -- java -XX:NativeMemoryTracking=summary -jar office-file-processor.jar
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        - ${OSDR_TEMP_FILES_FOLDER}:/temp
        ports:
        - 8987:8087
        networks:
        - leanda-ext
        depends_on:
        - rabbitmq
        - mongo

    chemical-properties:
        container_name: chemical-properties
        image: leanda/chemical-properties:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - TZ=EST
        - OSDR_LOG_FOLDER=/logs
        - OSDR_TEMP_FILES_FOLDER=/temp
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - QUEUE_PREFETCH_SIZE=9
        - EXECUTOR_THREAD_COUNT=3
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh mongo:27017 -t 60 -- java -jar sds-chemical-properties-service.jar
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        - ${OSDR_TEMP_FILES_FOLDER}:/temp
        ports:
        - 8986:8086
        networks:
        - leanda-ext
        depends_on:
        - rabbitmq
        - mongo

    microscopy-metadata-service:
        container_name: microscopy-metadata
        image: leanda/microscopy-metadata:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - TZ=EST
        - OSDR_LOG_FOLDER=/logs
        - OSDR_TEMP_FILES_FOLDER=/temp
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - QUEUE_PREFETCH_SIZE=9
        - EXECUTOR_THREAD_COUNT=3
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh mongo:27017 -t 60 -- java -jar leanda-microscopy-metadata-service.jar
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs/
        - ${OSDR_TEMP_FILES_FOLDER}:/temp/
        networks:
        - leanda-ext
        depends_on:
        - rabbitmq  
        - mongo

    chemical-export:
        container_name: chemical-export
        image: leanda/chemical-export:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - TZ=EST
        - OSDR_LOG_FOLDER=/logs
        - OSDR_TEMP_FILES_FOLDER=/temp
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - QUEUE_PREFETCH_SIZE=9
        - EXECUTOR_THREAD_COUNT=3
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh mongo:27017 -t 60 -- java -jar chemical-export-service.jar
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        - ${OSDR_TEMP_FILES_FOLDER}:/temp
        ports:
        - 8988:8088
        networks:
        - leanda-ext
        depends_on:
        - rabbitmq
        - mongo

    web-importer:
        container_name: web-importer
        image: leanda/web-importer:${TAG_VERSION-latest}
        entrypoint: /bin/bash
        environment:
        - TZ=EST
        - OSDR_TEMP_FILES_FOLDER=/temp
        - OSDR_LOG_FOLDER=/logs
        - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
        - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
        - QUEUE_PREFETCH_SIZE=9
        - EXECUTOR_THREAD_COUNT=3
        command: ./wait-for-it.sh rabbitmq:5672 -t 60 -- ./wait-for-it.sh mongo:27017 -t 60 -- java -jar web-importer-service.jar
        volumes:
        - ${OSDR_LOG_FOLDER}:/logs
        - ${OSDR_TEMP_FILES_FOLDER}:/temp
        ports:
        - 8989:8089
        networks:
        - leanda-ext
        depends_on:
        - rabbitmq
        - mongo

    # ml-modeler:
    #     container_name: ml-modeler
    #     image: docker.scidatasoft.com/osdr-ml-modeler:${TAG_VERSION-latest}
    #     environment:
    #     - OSDR_LOG_FOLDER=/logs
    #     - OSDR_TEMP_FILES_FOLDER=/temp
    #     - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
    #     - OSDR_BLOB_SERVICE_TOKEN_URL=${IDENTITY_SERVER_URL}/protocol/openid-connect/token
    #     - OSDR_BLOB_SERVICE_URL=${BLOB_STORAGE_API_URL_UNESCAPED}
    #     - OSDR_ML_MODELER_CLIENT_SECRET=52461d3c-7f0b-4b72-a508-1e7febaacabb
    #     - OSDR_RABBIT_MQ_ML_MODELER_MAX_THREADS_NUMBER=32
    #     - OSDR_RABBIT_MQ_ML_MODELER_PREFETCH_COUNT=32
    #     volumes:
    #     # TODO temporary hardcoded part
    #     - /home/logs:/logs/
    #     - /home/temp/ml_services:/temp/
    #     # - ${OSDR_LOG_FOLDER}:/logs
    #     # - ${OSDR_TEMP_FILES_FOLDER}:/temp
    #     networks:
    #     - leanda-ext
    #     depends_on:
    #     - blob-storage-api
    #     command: >
    #       /bin/bash -c "
    #         sleep 5;
    #         python ./model_trainer.py;
    #       "

    # ml-predictor:
    #     container_name: ml-predictor
    #     image: docker.scidatasoft.com/osdr-ml-predictor:${TAG_VERSION-latest}
    #     environment:
    #     - OSDR_LOG_FOLDER=/logs
    #     - OSDR_TEMP_FILES_FOLDER=/temp
    #     - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
    #     - OSDR_BLOB_SERVICE_TOKEN_URL=${IDENTITY_SERVER_URL}/protocol/openid-connect/token
    #     - OSDR_BLOB_SERVICE_URL=${BLOB_STORAGE_API_URL_UNESCAPED}
    #     - OSDR_ML_MODELER_CLIENT_SECRET=52461d3c-7f0b-4b72-a508-1e7febaacabb
    #     - OSDR_RABBIT_MQ_ML_QUEUE_CREATE_PREDICTION_COMMAND=Sds.MachineLearning.Integration.Domain.Commands.PredictProperties
    #     - OSDR_RABBIT_MQ_ML_ECHANGE_PREDICTION_CREATED_EVENT=Sds.MachineLearning.Integration.Domain.Events.PropertiesPredicted
    #     - OSDR_RABBIT_MQ_ML_ECHANGE_PREDICTION_FAILED_EVENT=Sds.MachineLearning.Integration.Domain.Events.PropertiesPredictionFailed
    #     - OSDR_RABBIT_MQ_ML_ECHANGE_PREDICTION_REPORT_CREATED_EVENT=Sds.MachineLearning.Integration.Domain.Events.PropertiesPredictionReportCreated
    #     - OSDR_RABBIT_MQ_ML_PREDICTOR_MAX_THREADS_NUMBER=32
    #     - OSDR_RABBIT_MQ_ML_PREDICTOR_PREFETCH_COUNT=32
    #     volumes:
    #     # TODO temporary hardcoded part
    #     - /home/logs:/logs/
    #     - /home/temp/ml_services:/temp/
    #     # - ${OSDR_LOG_FOLDER}:/logs
    #     # - ${OSDR_TEMP_FILES_FOLDER}:/temp
    #     networks:
    #     - leanda-ext
    #     depends_on:
    #     - blob-storage-api
    #     command: >
    #       /bin/bash -c "
    #         sleep 5;
    #         python ./properties_predictor.py;
    #       "

    # ml-training-reporter:
    #     container_name: ml-training-reporter
    #     image: docker.scidatasoft.com/osdr-ml-training-reporter:${TAG_VERSION-latest}
    #     environment:
    #     - OSDR_LOG_FOLDER=/logs
    #     - OSDR_TEMP_FILES_FOLDER=/temp
    #     - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
    #     - OSDR_BLOB_SERVICE_TOKEN_URL=${IDENTITY_SERVER_URL}/protocol/openid-connect/token
    #     - OSDR_BLOB_SERVICE_URL=${BLOB_STORAGE_API_URL_UNESCAPED}
    #     - OSDR_ML_MODELER_CLIENT_SECRET=52461d3c-7f0b-4b72-a508-1e7febaacabb
    #     - OSDR_RABBIT_MQ_ML_TRAINING_REPORTER_MAX_THREADS_NUMBER=32
    #     - OSDR_RABBIT_MQ_ML_TRAINING_REPORTER_PREFETCH_COUNT=32
    #     - CORE_API_URL=${CORE_API_URL}
    #     volumes:
    #     # TODO temporary hardcoded part
    #     - /home/logs:/logs/
    #     - /home/temp/ml_services:/temp/
    #     # - ${OSDR_LOG_FOLDER}:/logs
    #     # - ${OSDR_TEMP_FILES_FOLDER}:/temp
    #     depends_on:
    #     - blob-storage-api
    #     networks:
    #     - leanda-ext
    #     command: >
    #       /bin/bash -c "
    #         sleep 5;
    #         python ./report_generator.py;
    #       "

    # ml-training-optimizer:
    #     container_name: ml-training-optimizer
    #     image: docker.scidatasoft.com/osdr-ml-training-optimizer:${TAG_VERSION-latest}
    #     environment:
    #     - OSDR_LOG_FOLDER=/logs
    #     - OSDR_TEMP_FILES_FOLDER=/temp
    #     - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
    #     - OSDR_BLOB_SERVICE_TOKEN_URL=${IDENTITY_SERVER_URL}/protocol/openid-connect/token
    #     - OSDR_BLOB_SERVICE_URL=${BLOB_STORAGE_API_URL_UNESCAPED}
    #     - OSDR_ML_MODELER_CLIENT_SECRET=52461d3c-7f0b-4b72-a508-1e7febaacabb
    #     - OSDR_RABBIT_MQ_ML_TRAINING_OPTIMIZER_MAX_THREADS_NUMBER=32
    #     - OSDR_RABBIT_MQ_ML_TRAINING_OPTIMIZER_PREFETCH_COUNT=32
    #     volumes:
    #     # TODO temporary hardcoded part
    #     - /home/logs:/logs/
    #     - /home/temp/ml_services:/temp/
    #     # - ${OSDR_LOG_FOLDER}:/logs
    #     # - ${OSDR_TEMP_FILES_FOLDER}:/temp
    #     depends_on:
    #     - blob-storage-api
    #     networks:
    #     - leanda-ext
    #     command: >
    #       /bin/bash -c "
    #         sleep 5;
    #         python ./optimizer.py;
    #       "

    # feature-vectors-calculator:
    #     container_name: feature-vectors-calculator
    #     image: leanda/ml-feature-vectors-calculator:${TAG_VERSION-latest}
    #     environment:
    #     - OSDR_LOG_FOLDER=/logs
    #     - OSDR_TEMP_FILES_FOLDER=/temp
    #     - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
    #     - OSDR_RABBIT_MQ_FEATURE_VECTOR_CALCULATOR_MAX_THREADS_NUMBER=32
    #     - OSDR_RABBIT_MQ_FEATURE_VECTOR_CALCULATOR_PREFETCH_COUNT=32
    #     - REDIS_EXPIRATION_TIME_SECONDS=43200
    #     - OSDR_ML_MODELER_CLIENT_ID=${OSDR_ML_MODELER_CLIENT_ID}
    #     - OSDR_ML_MODELER_CLIENT_SECRET=${OSDR_ML_MODELER_CLIENT_SECRET}
    #     - OSDR_BLOB_SERVICE_TOKEN_URL=${OSDR_BLOB_SERVICE_TOKEN_URL}
    #     - OSDR_BLOB_SERVICE_URL=${OSDR_BLOB_SERVICE_URL}
    #     - OSDR_API_URL=${CORE_API_URL}
    #     volumes:
    #     - ${OSDR_LOG_FOLDER}:/logs
    #     - ${OSDR_TEMP_FILES_FOLDER}:/temp
    #     networks:
    #     - leanda-ext
    #     command: >
    #       /bin/bash -c "
    #         sleep 5;
    #         python ./calculator.py;
    #       "

    # ml-single-structure-predictor:
    #     container_name: ml-single-structure-predictor
    #     image: docker.scidatasoft.com/osdr-ml-single-structure-predictor:${TAG_VERSION-latest}
    #     environment:
    #     - OSDR_LOG_FOLDER=/logs
    #     - OSDR_TEMP_FILES_FOLDER=/temp
    #     - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_dev
    #     - OSDR_BLOB_SERVICE_TOKEN_URL=${IDENTITY_SERVER_URL}/protocol/openid-connect/token
    #     - OSDR_BLOB_SERVICE_URL=${BLOB_STORAGE_API_URL_UNESCAPED}
    #     - OSDR_ML_MODELER_CLIENT_SECRET=52461d3c-7f0b-4b72-a508-1e7febaacabb
    #     - OSDR_RABBIT_MQ_ML_SINGLE_STRUCTURE_PREDICTOR_MAX_THREADS_NUMBER=32
    #     - OSDR_RABBIT_MQ_ML_SINGLE_STRUCTURE_PREDICTOR_PREFETCH_COUNT=32
    #     - API_MODELS_ENTITIES_URL=${CORE_API_URL}/entities/models/public
    #     volumes:
    #     # TODO temporary hardcoded part
    #     - /home/logs:/logs/
    #     - /home/temp/ml_services:/temp/
    #     # - ${OSDR_LOG_FOLDER}:/logs
    #     # - ${OSDR_TEMP_FILES_FOLDER}:/temp
    #     depends_on:
    #     - blob-storage-api
    #     networks:
    #     - leanda-ext
    #     command: >
    #       /bin/bash -c "
    #         sleep 5;
    #         python ./single_structure_predictor.py;
    #       "

volumes:
    data-eventstore:
    data-redis:
    data-rabbitmq:
    data-elasticsearch:
    data-mongo-config:
    data-mongo-data:
    data-pstgresql:

networks:
    leanda-ext:
        external:
            name: leanda-net
